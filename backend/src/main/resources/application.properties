# Imposta il nome dell'applicazione Spring Boot.
spring.application.name=backend

# Abilita il riavvio automatico dell'applicazione quando vengono rilevate modifiche ai file.
spring.devtools.restart.enabled=true

# Abilita il LiveReload, che permette di aggiornare automaticamente il browser quando vengono apportate modifiche al codice.
spring.devtools.livereload.enabled=true

# ===============================
# CONFIGURAZIONE DEL DATABASE
# ===============================

# URL di connessione al database MySQL.
# Quando MySQL è in un container Docker, potrebbe essere necessario utilizzare "host.docker.internal" o il nome del servizio nel docker-compose.
spring.datasource.url=jdbc:mysql://localhost:3306/ticketing 

# Nome utente per accedere al database.
spring.datasource.username=root

# Password per accedere al database (attualmente vuota, da evitare in produzione per motivi di sicurezza).
spring.datasource.password=

# Specifica il driver JDBC da utilizzare per la connessione a MySQL.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ===============================
# CONFIGURAZIONE HIBERNATE
# ===============================

# Definisce come Hibernate deve gestire lo schema del database:
# - `none`: non apporta modifiche
# - `update`: aggiorna lo schema senza cancellare i dati esistenti
# - `create`: crea lo schema cancellando i dati ad ogni avvio
# - `create-drop`: crea e cancella lo schema ad ogni riavvio
spring.jpa.hibernate.ddl-auto=update

# Mostra le query SQL eseguite da Hibernate nei log.
# Impostato su `false` per evitare eccessiva verbosità nei log di produzione. *** Non scrive in file di log ma mostra solo in console
spring.jpa.show-sql=false

# Specifica il dialect di Hibernate per MySQL, necessario per tradurre le query SQL nel formato corretto.
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# Disabilita la gestione automatica della sessione Hibernate nel ciclo di vita della richiesta HTTP.
# Impostandolo su `false`, si riducono i problemi di Lazy Initialization e si migliora la gestione della sessione.
spring.jpa.open-in-view=false

# ===============================
# CONFIGURAZIONE LOGGING (DISATTIVATA)
# ===============================

## Abilita il logging delle query SQL eseguite da Hibernate.
logging.level.org.hibernate.SQL=DEBUG

## Mostra i parametri effettivi passati alle query SQL nei log.
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

## Formatta le query SQL nei log per renderle più leggibili.
# spring.jpa.properties.hibernate.format_sql=true

# ===============================
# CONFIGURAZIONE UPLOAD FILE
# ===============================

# Imposta la dimensione massima consentita per un singolo file caricato (2MB).
spring.servlet.multipart.max-file-size=2MB

# Imposta la dimensione massima consentita per una richiesta HTTP che include file (2MB).
spring.servlet.multipart.max-request-size=2MB
